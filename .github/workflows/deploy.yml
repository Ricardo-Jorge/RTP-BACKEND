name: Deploy to AWS EC2

on:
  push:
    branches:
      - main # O pipeline roda sempre que houver um push na branch 'main'

env:
  # Substitua com o URI do seu ECR e o nome do repositório
  ECR_REGISTRY: 562419492190.dkr.ecr.us-east-2.amazonaws.com
  ECR_REPOSITORY: rtp-api
  IMAGE_TAG: ${{ github.sha }} # Usa o hash do commit como tag da imagem

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_KEY }}
          script: |
            # Navega para a pasta da aplicação no servidor
            cd /home/ec2-user/app

            # Exporta a variável de ambiente com a tag da imagem correta
            IMAGE_TAG=${{ github.sha }} docker-compose pull rtp-api
            IMAGE_TAG=${{ github.sha }} docker-compose up -d --no-deps rtp-api

            # Limpa imagens antigas e não utilizadas
            docker image prune -af
